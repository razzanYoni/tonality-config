version: '3.8'
services:
  tonality-client:
    container_name: tonality-client
    hostname: tonality-client
    build:
      context: ../tonality-client
      dockerfile: Dockerfile
    ports:
      - "8000:80"

  tonality-rest:
    container_name: tonality-rest
    hostname: tonality-rest
    build:
      context: ../tonality-rest
      dockerfile: Dockerfile
    env_file:
      - env/tonality-rest.env
    ports:
      - "8001:3001"
    volumes:
      - ../tonality-rest/src:/tonality/tonality-rest/src  # Mount source code into container (for development only)
    depends_on:
      tonality-rest-db:
        condition: service_healthy
    networks:
      - backend

  tonality-rest-db:
    container_name: tonality-rest-db
    hostname: tonality-rest-db
    image: postgres:15.4-alpine
    env_file:
      - env/tonality-rest-db.env
    healthcheck:
      test: pg_isready
      timeout: 45s
      interval: 10s
      retries: 10
    ports:
      - "8002:5432"
    networks:
      - backend

  tonality-soap:
    container_name: tonality-soap
    hostname: tonality-soap
    build:
      context: ../tonality-soap
      dockerfile: Dockerfile
    restart: always
    env_file:
      - env/tonality-soap.env
    ports:
      - "8003:8888"
    volumes:
      - ../tonality-soap/src:/tonality/tonality-soap/src  # Mount source code into container (for development only)
    depends_on:
      - tonality-soap-db
    networks:
      - backend

  tonality-soap-db:
    container_name: tonality-soap-db
    hostname: tonality-soap-db
    image: mysql:8.2.0
    env_file:
      - env/tonality-soap-db.env
    ports:
      - "8004:3306"
    networks:
      - backend

  tonality-plain:
    container_name: tonality-plain
    hostname: tonality-plain
    build:
      context: ../tonality-plain
      dockerfile: Dockerfile
    env_file:
      - env/tonality-plain.env
    ports:
      - "8005:80"
    volumes:
      - ../tonality-plain:/var/www/html  # Mount source code into the container (for development only)
      - ../tonality-plain/storage:/var/www/html/storage  # Map storage directory to a volume
    depends_on:
      - tonality-plain-db
    networks:
      - backend

  tonality-plain-db:
    container_name: tonality-plain-db
    hostname: tonality-plain-db
    image: mysql:8.2.0
    env_file:
      - env/tonality-plain-db.env
    volumes:
      - ../tonality-plain/migrations/tonality.sql:/docker-entrypoint-initdb.d/tonality.sql:ro
    ports:
      - "8006:3306"
    networks:
      - backend

networks:
  backend:
